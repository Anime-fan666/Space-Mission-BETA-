<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Mobile Terraria Clone</title>
<style>
body, html { margin:0; padding:0; overflow:hidden; touch-action:none; }
canvas { display:block; background:#87CEEB; }
#controls { position:absolute; bottom:10px; width:100%; display:flex; justify-content:space-around; pointer-events:none; }
#joystick { width:80px; height:80px; background:rgba(100,100,100,0.5); border-radius:50%; pointer-events:all; touch-action:none; }
button { width:60px; height:60px; border-radius:10px; font-size:24px; pointer-events:all; }
#tutorial { position:absolute; top:10px; left:10px; background:rgba(255,255,255,0.7); padding:5px; border-radius:5px; font-size:16px;}
</style>
</head>
<body>
<canvas id="gameCanvas"></canvas>

<div id="controls">
  <div id="joystick"></div>
  <button id="jump">‚Üë</button>
  <button id="dig">‚õè</button>
  <button id="place">üß±</button>
</div>

<div id="tutorial">–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –î–∂–æ–π—Å—Ç–∏–∫ ‚Äî –¥–≤–∏–∂–µ–Ω–∏–µ, ‚Üë ‚Äî –ø—Ä—ã–∂–æ–∫, ‚õè ‚Äî –ª–æ–º–∞—Ç—å –±–ª–æ–∫, üß± ‚Äî —Å—Ç–∞–≤–∏—Ç—å –±–ª–æ–∫.</div>

<script>
// --- –ò–≥—Ä–∞ ---
const canvas = document.getElementById('gameCanvas');
const ctx = canvas.getContext('2d');
canvas.width = window.innerWidth;
canvas.height = window.innerHeight;

const TILE_SIZE = 40;
const WORLD_WIDTH = 30;
const WORLD_HEIGHT = 20;

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –º–∏—Ä–∞
let world = [];
for(let y=0; y<WORLD_HEIGHT; y++){
  world[y] = [];
  for(let x=0; x<WORLD_WIDTH; x++){
    if(y > WORLD_HEIGHT/2) world[y][x]='dirt';
    else if(y === Math.floor(WORLD_HEIGHT/2)) world[y][x]='grass';
    else world[y][x]='air';
  }
}

// –ò–≥—Ä–æ–∫
let player = {x:100, y:100, width:30, height:30, color:'red', dy:0, hp:100};

// –í—Ä–∞–≥–∏ (—Å–ª–∏–∑–Ω–∏)
let enemies = [{x:400, y:canvas.height-100, width:30, height:30, color:'green', dx:1, hp:20}];

// –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
let keys = {left:false, right:false, jump:false};
document.getElementById('jump').addEventListener('touchstart', ()=>keys.jump=true);
document.getElementById('jump').addEventListener('touchend', ()=>keys.jump=false);
document.getElementById('dig').addEventListener('touchstart', digBlock);
document.getElementById('place').addEventListener('touchstart', placeBlock);

// –î–∂–æ–π—Å—Ç–∏–∫
const joystick = document.getElementById('joystick');
let startX=0;
joystick.addEventListener('touchstart', e=>{ startX=e.touches[0].clientX; });
joystick.addEventListener('touchmove', e=>{
  let dx = e.touches[0].clientX - startX;
  if(dx>20){ keys.right=true; keys.left=false;}
  else if(dx<-20){ keys.left=true; keys.right=false;}
});
joystick.addEventListener('touchend', e=>{ keys.left=false; keys.right=false; });

// –ö—Ä–∞—Ñ—Ç –æ—Ä—É–∂–∏—è (–º–∏–Ω–∏)
let inventory = {wood:5, stone:3, sword:false};
function craftSword(){
  if(inventory.wood>=2 && inventory.stone>=1){ inventory.wood-=2; inventory.stone-=1; inventory.sword=true; alert("–°–¥–µ–ª–∞–Ω –º–µ—á!"); }
}

// –§—É–Ω–∫—Ü–∏–∏ –±–ª–æ–∫–æ–≤
function digBlock(){
  let px=Math.floor(player.x/TILE_SIZE);
  let py=Math.floor(player.y/TILE_SIZE);
  if(world[py+1] && world[py+1][px]!=='air') world[py+1][px]='air';
}
function placeBlock(){
  let px=Math.floor(player.x/TILE_SIZE);
  let py=Math.floor(player.y/TILE_SIZE);
  if(world[py+1] && world[py+1][px]==='air') world[py+1][px]='dirt';
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ
function update(){
  // –ì—Ä–∞–≤–∏—Ç–∞—Ü–∏—è
  player.dy+=0.5;
  player.y+=player.dy;

  let py=Math.floor((player.y+player.height)/TILE_SIZE);
  let px=Math.floor(player.x/TILE_SIZE);
  if(world[py] && world[py][px]!=='air'){ player.y=py*TILE_SIZE-player.height; player.dy=0; }

  // –î–≤–∏–∂–µ–Ω–∏–µ
  if(keys.left) player.x-=5;
  if(keys.right) player.x+=5;
  if(keys.jump && player.dy===0) player.dy=-10;

  // –í—Ä–∞–≥–∏
  enemies.forEach(e=>{
    e.x += e.dx;
    // –°—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–µ —Å –∫—Ä–∞—è–º–∏
    if(e.x<0 || e.x>canvas.width-30) e.dx*=-1;
    // –°—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–µ —Å –∏–≥—Ä–æ–∫–æ–º
    if(player.x < e.x+e.width && player.x+player.width>e.x && player.y<e.y+e.height && player.y+player.height>e.y){
      player.hp -=0.5;
    }
  });
}

// –†–∏—Å—É–µ–º
function draw(){
  ctx.clearRect(0,0,canvas.width,canvas.height);

  // –ë–ª–æ–∫–∏
  for(let y=0; y<WORLD_HEIGHT; y++){
    for(let x=0; x<WORLD_WIDTH; x++){
      if(world[y][x]!=='air'){
        ctx.fillStyle = world[y][x]==='dirt'?'brown':'green';
        ctx.fillRect(x*TILE_SIZE, y*TILE_SIZE, TILE_SIZE, TILE_SIZE);
      }
    }
  }

  // –ò–≥—Ä–æ–∫
  ctx.fillStyle=player.color;
  ctx.fillRect(player.x, player.y, player.width, player.height);

  // –í—Ä–∞–≥–∏
  enemies.forEach(e=>{
    ctx.fillStyle=e.color;
    ctx.fillRect(e.x,e.y,e.width,e.height);
  });

  // HUD
  ctx.fillStyle='black';
  ctx.font='20px Arial';
  ctx.fillText(`HP: ${Math.floor(player.hp)}`,10,30);
  ctx.fillText(`Wood: ${inventory.wood} Stone: ${inventory.stone} Sword: ${inventory.sword?'Yes':'No'}`,10,60);
}

// –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
function gameLoop(){
  update();
  draw();
  requestAnimationFrame(gameLoop);
}
gameLoop();

// –¢—É—Ç–æ—Ä–∏–∞–ª + –∫—Ä–∞—Ñ—Ç
setTimeout(()=>{ craftSword(); }, 3000);
</script>
</body>
</html>
